{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { RouterLink } from 'vue-router';\nimport { mdiMinus, mdiPlus } from '@mdi/js';\nimport { getButtonColor } from '@/colors.js';\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport AsideMenuList from '@/components/AsideMenuList.vue';\nexport default {\n  __name: 'AsideMenuItem',\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    isDropdownList: Boolean\n  },\n  emits: ['menu-click'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const hasColor = computed(() => props.item && props.item.color);\n    const asideMenuItemActiveStyle = computed(() => hasColor.value ? '' : 'aside-menu-item-active font-bold');\n    const isDropdownActive = ref(false);\n    const componentClass = computed(() => [props.isDropdownList ? 'py-3 px-6 text-sm' : 'py-3', hasColor.value ? getButtonColor(props.item.color, false, true) : `aside-menu-item dark:text-slate-300 dark:hover:text-white`]);\n    const hasDropdown = computed(() => !!props.item.menu);\n    const menuClick = event => {\n      emit('menu-click', event, props.item);\n      if (hasDropdown.value) {\n        isDropdownActive.value = !isDropdownActive.value;\n      }\n    };\n    const __returned__ = {\n      props,\n      emit,\n      hasColor,\n      asideMenuItemActiveStyle,\n      isDropdownActive,\n      componentClass,\n      hasDropdown,\n      menuClick,\n      ref,\n      computed,\n      get RouterLink() {\n        return RouterLink;\n      },\n      get mdiMinus() {\n        return mdiMinus;\n      },\n      get mdiPlus() {\n        return mdiPlus;\n      },\n      get getButtonColor() {\n        return getButtonColor;\n      },\n      BaseIcon,\n      AsideMenuList\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","RouterLink","mdiMinus","mdiPlus","getButtonColor","BaseIcon","AsideMenuList","props","__props","emit","__emit","hasColor","item","color","asideMenuItemActiveStyle","value","isDropdownActive","componentClass","isDropdownList","hasDropdown","menu","menuClick","event"],"sources":["G:/CODING/IntelliJ_ult/TicketRaider/frontend/src/components/AsideMenuItem.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { RouterLink } from 'vue-router'\r\nimport { mdiMinus, mdiPlus } from '@mdi/js'\r\nimport { getButtonColor } from '@/colors.js'\r\nimport BaseIcon from '@/components/BaseIcon.vue'\r\nimport AsideMenuList from '@/components/AsideMenuList.vue'\r\n\r\nconst props = defineProps({\r\n  item: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  isDropdownList: Boolean\r\n})\r\n\r\nconst emit = defineEmits(['menu-click'])\r\n\r\nconst hasColor = computed(() => props.item && props.item.color)\r\n\r\nconst asideMenuItemActiveStyle = computed(() =>\r\n  hasColor.value ? '' : 'aside-menu-item-active font-bold'\r\n)\r\n\r\nconst isDropdownActive = ref(false)\r\n\r\nconst componentClass = computed(() => [\r\n  props.isDropdownList ? 'py-3 px-6 text-sm' : 'py-3',\r\n  hasColor.value\r\n    ? getButtonColor(props.item.color, false, true)\r\n    : `aside-menu-item dark:text-slate-300 dark:hover:text-white`\r\n])\r\n\r\nconst hasDropdown = computed(() => !!props.item.menu)\r\n\r\nconst menuClick = (event) => {\r\n  emit('menu-click', event, props.item)\r\n\r\n  if (hasDropdown.value) {\r\n    isDropdownActive.value = !isDropdownActive.value\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <li>\r\n    <component\r\n      :is=\"item.to ? RouterLink : 'a'\"\r\n      v-slot=\"vSlot\"\r\n      :to=\"item.to ?? null\"\r\n      :href=\"item.href ?? null\"\r\n      :target=\"item.target ?? null\"\r\n      class=\"flex cursor-pointer\"\r\n      :class=\"componentClass\"\r\n      @click=\"menuClick\"\r\n    >\r\n      <BaseIcon\r\n        v-if=\"item.icon\"\r\n        :path=\"item.icon\"\r\n        class=\"flex-none\"\r\n        :class=\"[vSlot && vSlot.isExactActive ? asideMenuItemActiveStyle : '']\"\r\n        w=\"w-16\"\r\n        :size=\"18\"\r\n      />\r\n      <span\r\n        class=\"grow text-ellipsis line-clamp-1\"\r\n        :class=\"[\r\n          { 'pr-12': !hasDropdown },\r\n          vSlot && vSlot.isExactActive ? asideMenuItemActiveStyle : ''\r\n        ]\"\r\n        >{{ item.label }}</span\r\n      >\r\n      <BaseIcon\r\n        v-if=\"hasDropdown\"\r\n        :path=\"isDropdownActive ? mdiMinus : mdiPlus\"\r\n        class=\"flex-none\"\r\n        :class=\"[vSlot && vSlot.isExactActive ? asideMenuItemActiveStyle : '']\"\r\n        w=\"w-12\"\r\n      />\r\n    </component>\r\n    <AsideMenuList\r\n      v-if=\"hasDropdown\"\r\n      :menu=\"item.menu\"\r\n      :class=\"['aside-menu-dropdown', isDropdownActive ? 'block dark:bg-slate-800/50' : 'hidden']\"\r\n      is-dropdown-list\r\n    />\r\n  </li>\r\n</template>\r\n"],"mappings":"AACA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,QAAQ,EAAEC,OAAO,QAAQ,SAAS;AAC3C,SAASC,cAAc,QAAQ,aAAa;AAC5C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,aAAa,MAAM,gCAAgC;;;;;;;;;;;;;;;;IAE1D,MAAMC,KAAK,GAAGC,OAMZ;IAEF,MAAMC,IAAI,GAAGC,MAA2B;IAExC,MAAMC,QAAQ,GAAGX,QAAQ,CAAC,MAAMO,KAAK,CAACK,IAAI,IAAIL,KAAK,CAACK,IAAI,CAACC,KAAK,CAAC;IAE/D,MAAMC,wBAAwB,GAAGd,QAAQ,CAAC,MACxCW,QAAQ,CAACI,KAAK,GAAG,EAAE,GAAG,kCACxB,CAAC;IAED,MAAMC,gBAAgB,GAAGjB,GAAG,CAAC,KAAK,CAAC;IAEnC,MAAMkB,cAAc,GAAGjB,QAAQ,CAAC,MAAM,CACpCO,KAAK,CAACW,cAAc,GAAG,mBAAmB,GAAG,MAAM,EACnDP,QAAQ,CAACI,KAAK,GACVX,cAAc,CAACG,KAAK,CAACK,IAAI,CAACC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,GAC5C,2DAA0D,CAChE,CAAC;IAEF,MAAMM,WAAW,GAAGnB,QAAQ,CAAC,MAAM,CAAC,CAACO,KAAK,CAACK,IAAI,CAACQ,IAAI,CAAC;IAErD,MAAMC,SAAS,GAAIC,KAAK,IAAK;MAC3Bb,IAAI,CAAC,YAAY,EAAEa,KAAK,EAAEf,KAAK,CAACK,IAAI,CAAC;MAErC,IAAIO,WAAW,CAACJ,KAAK,EAAE;QACrBC,gBAAgB,CAACD,KAAK,GAAG,CAACC,gBAAgB,CAACD,KAAK;MAClD;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}